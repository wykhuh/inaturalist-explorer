(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const r of t.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&o(r)}).observe(document,{childList:!0,subtree:!0});function c(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function o(e){if(e.ep)return;e.ep=!0;const t=c(e);fetch(e.href,t)}})();async function i(s,n){const c=new DOMParser;let o;try{let r=`/inaturalist-explorer${s}`;o=await fetch(r)}catch(r){console.error("componenr ERROR:",r)}if(!o)return;const e=await o.text(),t=c.parseFromString(e,"text/html").querySelector("template");t&&n.appendChild(t.content.cloneNode(!0))}class l extends HTMLElement{constructor(){super()}connectedCallback(){i("/src/components/Header/template.html",this)}}customElements.define("x-header",l);export{i as s};
